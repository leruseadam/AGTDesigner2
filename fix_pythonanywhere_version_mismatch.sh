#!/bin/bash

# Fix PythonAnywhere Version Mismatch Script
# This script addresses the Python 3.11 (local) vs Python 3.10 (PythonAnywhere) mismatch

echo "=== PythonAnywhere Version Mismatch Fix ==="
echo "Local Python: 3.11.0"
echo "PythonAnywhere Python: 3.10.12"
echo ""

echo "Choose your preferred solution:"
echo "1. Upgrade PythonAnywhere to Python 3.11 (Recommended)"
echo "2. Use Python 3.10 compatible requirements (Keep current version)"
echo "3. Show current status and recommendations"
echo ""

read -p "Enter your choice (1-3): " choice

case $choice in
    1)
        echo ""
        echo "=== Solution 1: Upgrade to Python 3.11 ==="
        echo "This will create a new virtual environment with Python 3.11"
        echo ""
        echo "Manual steps to run on PythonAnywhere:"
        echo ""
        echo "1. Go to PythonAnywhere bash console"
        echo "2. Create new virtual environment:"
        echo "   mkvirtualenv --python=/usr/bin/python3.11 labelmaker-py311"
        echo ""
        echo "3. Navigate to your project:"
        echo "   cd ~/AGTDesigner"
        echo ""
        echo "4. Install Python 3.11 compatible requirements:"
        echo "   pip install --upgrade pip setuptools wheel"
        echo "   pip install -r requirements_pythonanywhere_py313.txt"
        echo ""
        echo "5. Update Web app configuration:"
        echo "   - Go to Web tab"
        echo "   - Change virtual environment to: /home/adamcordova/.virtualenvs/labelmaker-py311"
        echo "   - Click 'Reload'"
        echo ""
        echo "6. Verify installation:"
        echo "   python --version"
        echo "   python -c \"import pandas, flask, docx; print('All imports successful')\""
        ;;
    2)
        echo ""
        echo "=== Solution 2: Use Python 3.10 Compatible Requirements ==="
        echo "This keeps Python 3.10 but ensures compatibility"
        echo ""
        echo "Manual steps to run on PythonAnywhere:"
        echo ""
        echo "1. Go to PythonAnywhere bash console"
        echo "2. Navigate to your project:"
        echo "   cd ~/AGTDesigner"
        echo ""
        echo "3. Activate your virtual environment:"
        echo "   source ~/labelmaker-venv/bin/activate"
        echo ""
        echo "4. Install Python 3.10 compatible requirements:"
        echo "   pip install --upgrade pip setuptools wheel"
        echo "   pip install -r requirements_pythonanywhere_py310.txt"
        echo ""
        echo "5. Update WSGI file (optional):"
        echo "   cp wsgi_pythonanywhere_py310.py wsgi.py"
        echo ""
        echo "6. Reload your web app in the Web tab"
        echo ""
        echo "7. Verify installation:"
        echo "   python --version"
        echo "   python -c \"import pandas, flask, docx; print('All imports successful')\""
        ;;
    3)
        echo ""
        echo "=== Current Status Analysis ==="
        echo ""
        echo "Local Environment:"
        echo "- Python: 3.11.0"
        echo "- Development mode: Enabled"
        echo "- Default file logic: Removed (as mentioned)"
        echo ""
        echo "PythonAnywhere Environment:"
        echo "- Python: 3.10.12"
        echo "- Production mode: Enabled"
        echo "- Virtual environment: /home/adamcordova/labelmaker-venv"
        echo ""
        echo "Potential Issues:"
        echo "1. Package compatibility differences between Python 3.10 and 3.11"
        echo "2. Different default behaviors in newer Python versions"
        echo "3. Some packages may have different APIs between versions"
        echo ""
        echo "Recommendations:"
        echo "1. Upgrade to Python 3.11 for consistency (Recommended)"
        echo "2. Use version-specific requirements files"
        echo "3. Test thoroughly after any version changes"
        echo ""
        echo "Next Steps:"
        echo "- Run this script again and choose option 1 or 2"
        echo "- Follow the manual steps provided"
        echo "- Test your application after making changes"
        ;;
    *)
        echo "Invalid choice. Please run the script again and choose 1, 2, or 3."
        ;;
esac

echo ""
echo "=== Additional Notes ==="
echo ""
echo "If you encounter issues after making changes:"
echo "1. Check the error logs in PythonAnywhere Web tab"
echo "2. Run the debug script: python pythonanywhere_debug_script.py"
echo "3. Verify all required packages are installed"
echo "4. Ensure file permissions are correct"
echo ""
echo "For more help, check the PYTHONANYWHERE_DEBUG_GUIDE.md file" 